   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"LED_Module.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	PuffSem,4,4
  19              		.comm	LEDSem,4,4
  20              		.comm	LEDRedMut,4,4
  21              		.comm	LEDGreenMut,4,4
  22              		.comm	LEDBlueMut,4,4
  23              		.section	.data.LEDLayerRed,"aw",%progbits
  26              	LEDLayerRed:
  27 0000 01       		.byte	1
  28              		.section	.data.LEDLayerGreen,"aw",%progbits
  31              	LEDLayerGreen:
  32 0000 04       		.byte	4
  33              		.section	.data.LEDLayerBlue,"aw",%progbits
  36              	LEDLayerBlue:
  37 0000 02       		.byte	2
  38              		.section	.text.LEDChangePixels,"ax",%progbits
  39              		.align	2
  40              		.global	LEDChangePixels
  41              		.thumb
  42              		.thumb_func
  44              	LEDChangePixels:
  45              	.LFB61:
  46              		.file 1 "../src/LED_Module.c"
   1:../src/LED_Module.c **** /******************************************************************************
   2:../src/LED_Module.c ****  *      LED_Module.c
   3:../src/LED_Module.c ****  *      Description:    This file contains all the LED UI related resources.
   4:../src/LED_Module.c ****  *      Engineer:       Riley Culligan
   5:../src/LED_Module.c ****  *      Date Created:   11/30/2015
   6:../src/LED_Module.c ****  */
   7:../src/LED_Module.c **** 
   8:../src/LED_Module.c **** /******************************************************************************
   9:../src/LED_Module.c ****  * Includes
  10:../src/LED_Module.c ****  */
  11:../src/LED_Module.c **** #include "../Libraries/includes.h"
  12:../src/LED_Module.c **** 
  13:../src/LED_Module.c **** /******************************************************************************
  14:../src/LED_Module.c ****  * Global Vars
  15:../src/LED_Module.c ****  */
  16:../src/LED_Module.c **** static uint8_t LEDLayerRed = 0x1;
  17:../src/LED_Module.c **** static uint8_t LEDLayerGreen = 0x4;
  18:../src/LED_Module.c **** static uint8_t LEDLayerBlue = 0x2;
  19:../src/LED_Module.c **** 
  20:../src/LED_Module.c **** /******************************************************************************
  21:../src/LED_Module.c ****  * Functions and tasks
  22:../src/LED_Module.c ****  */
  23:../src/LED_Module.c **** //void LEDTask(void * pvParameters);
  24:../src/LED_Module.c **** static void ChangeLED(uint8_t ledsel, uint8_t redcntrl, uint8_t greencntrl, uint8_t bluecntrl);
  25:../src/LED_Module.c **** //void LEDChangePixels(int pixels, LEDCOLOR color);
  26:../src/LED_Module.c **** //void LEDUpdateLayer(uint8_t pixels, LEDCOLOR color);
  27:../src/LED_Module.c **** 
  28:../src/LED_Module.c **** /******** LEDChangePixel()
  29:../src/LED_Module.c ****  * Description:     Update the color of specified pixels
  30:../src/LED_Module.c ****  * params:          pixels: specify which pixels' color you want to change
  31:../src/LED_Module.c ****  *                  color:  the color you want to change the pixels to
  32:../src/LED_Module.c ****  * return:          none
  33:../src/LED_Module.c ****  * Last Edited:     11/14/14 RTC
  34:../src/LED_Module.c ****  */
  35:../src/LED_Module.c **** void LEDChangePixels(int pixels, LEDCOLOR color)
  36:../src/LED_Module.c **** {
  47              		.loc 1 36 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 8
  50              		@ frame_needed = 1, uses_anonymous_args = 0
  51 0000 80B5     		push	{r7, lr}
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 82B0     		sub	sp, sp, #8
  56              		.cfi_def_cfa_offset 16
  57 0004 00AF     		add	r7, sp, #0
  58              		.cfi_def_cfa_register 7
  59 0006 7860     		str	r0, [r7, #4]
  60 0008 0B46     		mov	r3, r1
  61 000a FB70     		strb	r3, [r7, #3]
  37:../src/LED_Module.c ****     //Change red
  38:../src/LED_Module.c ****     xSemaphoreTake(LEDRedMut, portMAX_DELAY);
  62              		.loc 1 38 0
  63 000c 414B     		ldr	r3, .L8
  64 000e 1B68     		ldr	r3, [r3]
  65 0010 1846     		mov	r0, r3
  66 0012 0021     		movs	r1, #0
  67 0014 4FF0FF32 		mov	r2, #-1
  68 0018 0023     		movs	r3, #0
  69 001a FFF7FEFF 		bl	xQueueGenericReceive
  39:../src/LED_Module.c ****     LEDLayerRed = (color & RED) ? (LEDLayerRed|pixels) : (LEDLayerRed&~pixels);
  70              		.loc 1 39 0
  71 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  72 0020 03F00403 		and	r3, r3, #4
  73 0024 002B     		cmp	r3, #0
  74 0026 08D0     		beq	.L2
  75              		.loc 1 39 0 is_stmt 0 discriminator 1
  76 0028 7B68     		ldr	r3, [r7, #4]
  77 002a DAB2     		uxtb	r2, r3
  78 002c 3A4B     		ldr	r3, .L8+4
  79 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  80 0030 DBB2     		uxtb	r3, r3
  81 0032 1343     		orrs	r3, r3, r2
  82 0034 DBB2     		uxtb	r3, r3
  83 0036 DBB2     		uxtb	r3, r3
  84 0038 09E0     		b	.L3
  85              	.L2:
  86              		.loc 1 39 0 discriminator 2
  87 003a 7B68     		ldr	r3, [r7, #4]
  88 003c DBB2     		uxtb	r3, r3
  89 003e DB43     		mvns	r3, r3
  90 0040 DAB2     		uxtb	r2, r3
  91 0042 354B     		ldr	r3, .L8+4
  92 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  93 0046 DBB2     		uxtb	r3, r3
  94 0048 1340     		ands	r3, r3, r2
  95 004a DBB2     		uxtb	r3, r3
  96 004c DBB2     		uxtb	r3, r3
  97              	.L3:
  98              		.loc 1 39 0 discriminator 4
  99 004e 324A     		ldr	r2, .L8+4
 100 0050 1370     		strb	r3, [r2]
  40:../src/LED_Module.c ****     xSemaphoreGive(LEDRedMut);
 101              		.loc 1 40 0 is_stmt 1 discriminator 4
 102 0052 304B     		ldr	r3, .L8
 103 0054 1B68     		ldr	r3, [r3]
 104 0056 1846     		mov	r0, r3
 105 0058 0021     		movs	r1, #0
 106 005a 0022     		movs	r2, #0
 107 005c 0023     		movs	r3, #0
 108 005e FFF7FEFF 		bl	xQueueGenericSend
  41:../src/LED_Module.c ****     //Change green
  42:../src/LED_Module.c ****     xSemaphoreTake(LEDGreenMut, portMAX_DELAY);
 109              		.loc 1 42 0 discriminator 4
 110 0062 2E4B     		ldr	r3, .L8+8
 111 0064 1B68     		ldr	r3, [r3]
 112 0066 1846     		mov	r0, r3
 113 0068 0021     		movs	r1, #0
 114 006a 4FF0FF32 		mov	r2, #-1
 115 006e 0023     		movs	r3, #0
 116 0070 FFF7FEFF 		bl	xQueueGenericReceive
  43:../src/LED_Module.c ****     LEDLayerGreen = (color & GREEN) ? (LEDLayerGreen|pixels) : (LEDLayerGreen&~pixels);
 117              		.loc 1 43 0 discriminator 4
 118 0074 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 119 0076 03F00203 		and	r3, r3, #2
 120 007a 002B     		cmp	r3, #0
 121 007c 08D0     		beq	.L4
 122              		.loc 1 43 0 is_stmt 0 discriminator 1
 123 007e 7B68     		ldr	r3, [r7, #4]
 124 0080 DAB2     		uxtb	r2, r3
 125 0082 274B     		ldr	r3, .L8+12
 126 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 127 0086 DBB2     		uxtb	r3, r3
 128 0088 1343     		orrs	r3, r3, r2
 129 008a DBB2     		uxtb	r3, r3
 130 008c DBB2     		uxtb	r3, r3
 131 008e 09E0     		b	.L5
 132              	.L4:
 133              		.loc 1 43 0 discriminator 2
 134 0090 7B68     		ldr	r3, [r7, #4]
 135 0092 DBB2     		uxtb	r3, r3
 136 0094 DB43     		mvns	r3, r3
 137 0096 DAB2     		uxtb	r2, r3
 138 0098 214B     		ldr	r3, .L8+12
 139 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 140 009c DBB2     		uxtb	r3, r3
 141 009e 1340     		ands	r3, r3, r2
 142 00a0 DBB2     		uxtb	r3, r3
 143 00a2 DBB2     		uxtb	r3, r3
 144              	.L5:
 145              		.loc 1 43 0 discriminator 4
 146 00a4 1E4A     		ldr	r2, .L8+12
 147 00a6 1370     		strb	r3, [r2]
  44:../src/LED_Module.c ****     xSemaphoreGive(LEDGreenMut);
 148              		.loc 1 44 0 is_stmt 1 discriminator 4
 149 00a8 1C4B     		ldr	r3, .L8+8
 150 00aa 1B68     		ldr	r3, [r3]
 151 00ac 1846     		mov	r0, r3
 152 00ae 0021     		movs	r1, #0
 153 00b0 0022     		movs	r2, #0
 154 00b2 0023     		movs	r3, #0
 155 00b4 FFF7FEFF 		bl	xQueueGenericSend
  45:../src/LED_Module.c ****     //Change blue
  46:../src/LED_Module.c ****     xSemaphoreTake(LEDBlueMut, portMAX_DELAY);
 156              		.loc 1 46 0 discriminator 4
 157 00b8 1A4B     		ldr	r3, .L8+16
 158 00ba 1B68     		ldr	r3, [r3]
 159 00bc 1846     		mov	r0, r3
 160 00be 0021     		movs	r1, #0
 161 00c0 4FF0FF32 		mov	r2, #-1
 162 00c4 0023     		movs	r3, #0
 163 00c6 FFF7FEFF 		bl	xQueueGenericReceive
  47:../src/LED_Module.c ****     LEDLayerBlue = (color & BLUE) ? (LEDLayerBlue|pixels) : (LEDLayerBlue&~pixels);
 164              		.loc 1 47 0 discriminator 4
 165 00ca FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 166 00cc 03F00103 		and	r3, r3, #1
 167 00d0 002B     		cmp	r3, #0
 168 00d2 08D0     		beq	.L6
 169              		.loc 1 47 0 is_stmt 0 discriminator 1
 170 00d4 7B68     		ldr	r3, [r7, #4]
 171 00d6 DAB2     		uxtb	r2, r3
 172 00d8 134B     		ldr	r3, .L8+20
 173 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 174 00dc DBB2     		uxtb	r3, r3
 175 00de 1343     		orrs	r3, r3, r2
 176 00e0 DBB2     		uxtb	r3, r3
 177 00e2 DBB2     		uxtb	r3, r3
 178 00e4 09E0     		b	.L7
 179              	.L6:
 180              		.loc 1 47 0 discriminator 2
 181 00e6 7B68     		ldr	r3, [r7, #4]
 182 00e8 DBB2     		uxtb	r3, r3
 183 00ea DB43     		mvns	r3, r3
 184 00ec DAB2     		uxtb	r2, r3
 185 00ee 0E4B     		ldr	r3, .L8+20
 186 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 187 00f2 DBB2     		uxtb	r3, r3
 188 00f4 1340     		ands	r3, r3, r2
 189 00f6 DBB2     		uxtb	r3, r3
 190 00f8 DBB2     		uxtb	r3, r3
 191              	.L7:
 192              		.loc 1 47 0 discriminator 4
 193 00fa 0B4A     		ldr	r2, .L8+20
 194 00fc 1370     		strb	r3, [r2]
  48:../src/LED_Module.c ****     xSemaphoreGive(LEDBlueMut);
 195              		.loc 1 48 0 is_stmt 1 discriminator 4
 196 00fe 094B     		ldr	r3, .L8+16
 197 0100 1B68     		ldr	r3, [r3]
 198 0102 1846     		mov	r0, r3
 199 0104 0021     		movs	r1, #0
 200 0106 0022     		movs	r2, #0
 201 0108 0023     		movs	r3, #0
 202 010a FFF7FEFF 		bl	xQueueGenericSend
  49:../src/LED_Module.c **** }
 203              		.loc 1 49 0 discriminator 4
 204 010e 0837     		adds	r7, r7, #8
 205              		.cfi_def_cfa_offset 8
 206 0110 BD46     		mov	sp, r7
 207              		.cfi_def_cfa_register 13
 208              		@ sp needed
 209 0112 80BD     		pop	{r7, pc}
 210              	.L9:
 211              		.align	2
 212              	.L8:
 213 0114 00000000 		.word	LEDRedMut
 214 0118 00000000 		.word	LEDLayerRed
 215 011c 00000000 		.word	LEDGreenMut
 216 0120 00000000 		.word	LEDLayerGreen
 217 0124 00000000 		.word	LEDBlueMut
 218 0128 00000000 		.word	LEDLayerBlue
 219              		.cfi_endproc
 220              	.LFE61:
 222              		.section	.text.LEDUpdateLayer,"ax",%progbits
 223              		.align	2
 224              		.global	LEDUpdateLayer
 225              		.thumb
 226              		.thumb_func
 228              	LEDUpdateLayer:
 229              	.LFB62:
  50:../src/LED_Module.c **** /****************** LEDUpdateLayer()
  51:../src/LED_Module.c ****  * Description:     Update 1 specific subpixel layer (i.e. red, green, blue)
  52:../src/LED_Module.c ****  * Params           pixels: specify which pixels will be on for the given color
  53:../src/LED_Module.c ****  *                  color: color layer you want to change
  54:../src/LED_Module.c ****  * Return           none
  55:../src/LED_Module.c ****  * Last Edited:     11/17/14 RTC
  56:../src/LED_Module.c ****  */
  57:../src/LED_Module.c **** void LEDUpdateLayer(uint8_t pixels, LEDCOLOR color)
  58:../src/LED_Module.c **** {
 230              		.loc 1 58 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 8
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234 0000 80B5     		push	{r7, lr}
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 7, -8
 237              		.cfi_offset 14, -4
 238 0002 82B0     		sub	sp, sp, #8
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 242 0006 0346     		mov	r3, r0
 243 0008 0A46     		mov	r2, r1
 244 000a FB71     		strb	r3, [r7, #7]
 245 000c 1346     		mov	r3, r2
 246 000e BB71     		strb	r3, [r7, #6]
  59:../src/LED_Module.c ****     switch (color)
 247              		.loc 1 59 0
 248 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 249 0012 022B     		cmp	r3, #2
 250 0014 19D0     		beq	.L12
 251 0016 042B     		cmp	r3, #4
 252 0018 02D0     		beq	.L13
 253 001a 012B     		cmp	r3, #1
 254 001c 2AD0     		beq	.L14
  60:../src/LED_Module.c ****     {
  61:../src/LED_Module.c ****     case RED:
  62:../src/LED_Module.c ****         xSemaphoreTake(LEDRedMut, portMAX_DELAY);
  63:../src/LED_Module.c ****             LEDLayerRed = pixels;
  64:../src/LED_Module.c ****         xSemaphoreGive(LEDRedMut);
  65:../src/LED_Module.c ****         break;
  66:../src/LED_Module.c ****     case GREEN:
  67:../src/LED_Module.c ****         xSemaphoreTake(LEDGreenMut, portMAX_DELAY);
  68:../src/LED_Module.c ****             LEDLayerGreen = pixels;
  69:../src/LED_Module.c ****         xSemaphoreGive(LEDGreenMut);
  70:../src/LED_Module.c ****         break;
  71:../src/LED_Module.c ****     case BLUE:
  72:../src/LED_Module.c ****         xSemaphoreTake(LEDBlueMut, portMAX_DELAY);
  73:../src/LED_Module.c ****             LEDLayerBlue = pixels;
  74:../src/LED_Module.c ****         xSemaphoreGive(LEDBlueMut);
  75:../src/LED_Module.c ****         break;
  76:../src/LED_Module.c ****     default:
  77:../src/LED_Module.c ****         //Wrong color given
  78:../src/LED_Module.c ****         break;
 255              		.loc 1 78 0
 256 001e 3EE0     		b	.L10
 257              	.L13:
  62:../src/LED_Module.c ****             LEDLayerRed = pixels;
 258              		.loc 1 62 0
 259 0020 204B     		ldr	r3, .L16
 260 0022 1B68     		ldr	r3, [r3]
 261 0024 1846     		mov	r0, r3
 262 0026 0021     		movs	r1, #0
 263 0028 4FF0FF32 		mov	r2, #-1
 264 002c 0023     		movs	r3, #0
 265 002e FFF7FEFF 		bl	xQueueGenericReceive
  63:../src/LED_Module.c ****         xSemaphoreGive(LEDRedMut);
 266              		.loc 1 63 0
 267 0032 1D4A     		ldr	r2, .L16+4
 268 0034 FB79     		ldrb	r3, [r7, #7]
 269 0036 1370     		strb	r3, [r2]
  64:../src/LED_Module.c ****         break;
 270              		.loc 1 64 0
 271 0038 1A4B     		ldr	r3, .L16
 272 003a 1B68     		ldr	r3, [r3]
 273 003c 1846     		mov	r0, r3
 274 003e 0021     		movs	r1, #0
 275 0040 0022     		movs	r2, #0
 276 0042 0023     		movs	r3, #0
 277 0044 FFF7FEFF 		bl	xQueueGenericSend
  65:../src/LED_Module.c ****     case GREEN:
 278              		.loc 1 65 0
 279 0048 29E0     		b	.L10
 280              	.L12:
  67:../src/LED_Module.c ****             LEDLayerGreen = pixels;
 281              		.loc 1 67 0
 282 004a 184B     		ldr	r3, .L16+8
 283 004c 1B68     		ldr	r3, [r3]
 284 004e 1846     		mov	r0, r3
 285 0050 0021     		movs	r1, #0
 286 0052 4FF0FF32 		mov	r2, #-1
 287 0056 0023     		movs	r3, #0
 288 0058 FFF7FEFF 		bl	xQueueGenericReceive
  68:../src/LED_Module.c ****         xSemaphoreGive(LEDGreenMut);
 289              		.loc 1 68 0
 290 005c 144A     		ldr	r2, .L16+12
 291 005e FB79     		ldrb	r3, [r7, #7]
 292 0060 1370     		strb	r3, [r2]
  69:../src/LED_Module.c ****         break;
 293              		.loc 1 69 0
 294 0062 124B     		ldr	r3, .L16+8
 295 0064 1B68     		ldr	r3, [r3]
 296 0066 1846     		mov	r0, r3
 297 0068 0021     		movs	r1, #0
 298 006a 0022     		movs	r2, #0
 299 006c 0023     		movs	r3, #0
 300 006e FFF7FEFF 		bl	xQueueGenericSend
  70:../src/LED_Module.c ****     case BLUE:
 301              		.loc 1 70 0
 302 0072 14E0     		b	.L10
 303              	.L14:
  72:../src/LED_Module.c ****             LEDLayerBlue = pixels;
 304              		.loc 1 72 0
 305 0074 0F4B     		ldr	r3, .L16+16
 306 0076 1B68     		ldr	r3, [r3]
 307 0078 1846     		mov	r0, r3
 308 007a 0021     		movs	r1, #0
 309 007c 4FF0FF32 		mov	r2, #-1
 310 0080 0023     		movs	r3, #0
 311 0082 FFF7FEFF 		bl	xQueueGenericReceive
  73:../src/LED_Module.c ****         xSemaphoreGive(LEDBlueMut);
 312              		.loc 1 73 0
 313 0086 0C4A     		ldr	r2, .L16+20
 314 0088 FB79     		ldrb	r3, [r7, #7]
 315 008a 1370     		strb	r3, [r2]
  74:../src/LED_Module.c ****         break;
 316              		.loc 1 74 0
 317 008c 094B     		ldr	r3, .L16+16
 318 008e 1B68     		ldr	r3, [r3]
 319 0090 1846     		mov	r0, r3
 320 0092 0021     		movs	r1, #0
 321 0094 0022     		movs	r2, #0
 322 0096 0023     		movs	r3, #0
 323 0098 FFF7FEFF 		bl	xQueueGenericSend
  75:../src/LED_Module.c ****     default:
 324              		.loc 1 75 0
 325 009c 00BF     		nop
 326              	.L10:
  79:../src/LED_Module.c ****     }
  80:../src/LED_Module.c **** }
 327              		.loc 1 80 0
 328 009e 0837     		adds	r7, r7, #8
 329              		.cfi_def_cfa_offset 8
 330 00a0 BD46     		mov	sp, r7
 331              		.cfi_def_cfa_register 13
 332              		@ sp needed
 333 00a2 80BD     		pop	{r7, pc}
 334              	.L17:
 335              		.align	2
 336              	.L16:
 337 00a4 00000000 		.word	LEDRedMut
 338 00a8 00000000 		.word	LEDLayerRed
 339 00ac 00000000 		.word	LEDGreenMut
 340 00b0 00000000 		.word	LEDLayerGreen
 341 00b4 00000000 		.word	LEDBlueMut
 342 00b8 00000000 		.word	LEDLayerBlue
 343              		.cfi_endproc
 344              	.LFE62:
 346              		.section	.text.LEDTask,"ax",%progbits
 347              		.align	2
 348              		.global	LEDTask
 349              		.thumb
 350              		.thumb_func
 352              	LEDTask:
 353              	.LFB63:
  81:../src/LED_Module.c **** /****************** LEDTask()
  82:../src/LED_Module.c ****  * Description:     Initializes and PWMs the LEDs
  83:../src/LED_Module.c ****  * Params           none
  84:../src/LED_Module.c ****  * Return           none
  85:../src/LED_Module.c ****  * Last Edited:     11/14/14 RTC
  86:../src/LED_Module.c ****  */
  87:../src/LED_Module.c **** void LEDTask(void * pvParameters) {
 354              		.loc 1 87 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 16
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358 0000 80B5     		push	{r7, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 84B0     		sub	sp, sp, #16
 363              		.cfi_def_cfa_offset 24
 364 0004 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 366 0006 7860     		str	r0, [r7, #4]
  88:../src/LED_Module.c **** 
  89:../src/LED_Module.c ****     uint32_t i;
  90:../src/LED_Module.c ****     LEDRedMut =   xSemaphoreCreateMutex();
 367              		.loc 1 90 0
 368 0008 0120     		movs	r0, #1
 369 000a FFF7FEFF 		bl	xQueueCreateMutex
 370 000e 0246     		mov	r2, r0
 371 0010 464B     		ldr	r3, .L29
 372 0012 1A60     		str	r2, [r3]
  91:../src/LED_Module.c ****     LEDGreenMut = xSemaphoreCreateMutex();
 373              		.loc 1 91 0
 374 0014 0120     		movs	r0, #1
 375 0016 FFF7FEFF 		bl	xQueueCreateMutex
 376 001a 0246     		mov	r2, r0
 377 001c 444B     		ldr	r3, .L29+4
 378 001e 1A60     		str	r2, [r3]
  92:../src/LED_Module.c ****     LEDBlueMut =  xSemaphoreCreateMutex();
 379              		.loc 1 92 0
 380 0020 0120     		movs	r0, #1
 381 0022 FFF7FEFF 		bl	xQueueCreateMutex
 382 0026 0246     		mov	r2, r0
 383 0028 424B     		ldr	r3, .L29+8
 384 002a 1A60     		str	r2, [r3]
  93:../src/LED_Module.c ****     GPIO->P[2].CTRL = 1;    //g_pGPIO->PC_CTRL = 1;           //Set to "lowest" current, i.e. ~0.1m
 385              		.loc 1 93 0
 386 002c 424B     		ldr	r3, .L29+12
 387 002e 0122     		movs	r2, #1
 388 0030 9A64     		str	r2, [r3, #72]
  94:../src/LED_Module.c ****     //GPIO->P[1].MODEH |= 5<<0;      //Here mostly for an example
  95:../src/LED_Module.c ****     GPIO->P[2].MODEL |= 5<<4*1;
 389              		.loc 1 95 0
 390 0032 414A     		ldr	r2, .L29+12
 391 0034 404B     		ldr	r3, .L29+12
 392 0036 DB6C     		ldr	r3, [r3, #76]
 393 0038 43F05003 		orr	r3, r3, #80
 394 003c D364     		str	r3, [r2, #76]
  96:../src/LED_Module.c ****     for (i = 0; i <= 11; i++)
 395              		.loc 1 96 0
 396 003e 0023     		movs	r3, #0
 397 0040 FB60     		str	r3, [r7, #12]
 398 0042 31E0     		b	.L19
 399              	.L25:
  97:../src/LED_Module.c ****     {
  98:../src/LED_Module.c ****         if (i == 3)
 400              		.loc 1 98 0
 401 0044 FB68     		ldr	r3, [r7, #12]
 402 0046 032B     		cmp	r3, #3
 403 0048 00D1     		bne	.L20
  99:../src/LED_Module.c ****         {
 100:../src/LED_Module.c ****             continue;
 404              		.loc 1 100 0
 405 004a 2AE0     		b	.L21
 406              	.L20:
 101:../src/LED_Module.c ****         }
 102:../src/LED_Module.c ****         else if (i <= 2)
 407              		.loc 1 102 0
 408 004c FB68     		ldr	r3, [r7, #12]
 409 004e 022B     		cmp	r3, #2
 410 0050 06D8     		bhi	.L22
 103:../src/LED_Module.c ****         {
 104:../src/LED_Module.c ****             GPIO->P[2].DOUTSET = 1<<i;
 411              		.loc 1 104 0
 412 0052 394A     		ldr	r2, .L29+12
 413 0054 FB68     		ldr	r3, [r7, #12]
 414 0056 0121     		movs	r1, #1
 415 0058 01FA03F3 		lsl	r3, r1, r3
 416 005c 9365     		str	r3, [r2, #88]
 417 005e 05E0     		b	.L23
 418              	.L22:
 105:../src/LED_Module.c ****         }
 106:../src/LED_Module.c ****         else
 107:../src/LED_Module.c ****         {
 108:../src/LED_Module.c ****             GPIO->P[2].DOUTCLR = 1<<i;
 419              		.loc 1 108 0
 420 0060 354A     		ldr	r2, .L29+12
 421 0062 FB68     		ldr	r3, [r7, #12]
 422 0064 0121     		movs	r1, #1
 423 0066 01FA03F3 		lsl	r3, r1, r3
 424 006a D365     		str	r3, [r2, #92]
 425              	.L23:
 109:../src/LED_Module.c ****         }
 110:../src/LED_Module.c **** 
 111:../src/LED_Module.c ****         if (i <= 7)
 426              		.loc 1 111 0
 427 006c FB68     		ldr	r3, [r7, #12]
 428 006e 072B     		cmp	r3, #7
 429 0070 0AD8     		bhi	.L24
 112:../src/LED_Module.c ****         {
 113:../src/LED_Module.c ****             GPIO->P[2].MODEL |= 5<<4*(i);
 430              		.loc 1 113 0
 431 0072 3149     		ldr	r1, .L29+12
 432 0074 304B     		ldr	r3, .L29+12
 433 0076 DB6C     		ldr	r3, [r3, #76]
 434 0078 FA68     		ldr	r2, [r7, #12]
 435 007a 9200     		lsls	r2, r2, #2
 436 007c 1046     		mov	r0, r2
 437 007e 0522     		movs	r2, #5
 438 0080 8240     		lsls	r2, r2, r0
 439 0082 1343     		orrs	r3, r3, r2
 440 0084 CB64     		str	r3, [r1, #76]
 441 0086 0CE0     		b	.L21
 442              	.L24:
 114:../src/LED_Module.c ****         }
 115:../src/LED_Module.c ****         else
 116:../src/LED_Module.c ****         {
 117:../src/LED_Module.c ****             GPIO->P[2].MODEH |= 5<<4*(i-8);
 443              		.loc 1 117 0
 444 0088 2B49     		ldr	r1, .L29+12
 445 008a 2B4B     		ldr	r3, .L29+12
 446 008c 1A6D     		ldr	r2, [r3, #80]
 447 008e FB68     		ldr	r3, [r7, #12]
 448 0090 03F18043 		add	r3, r3, #1073741824
 449 0094 083B     		subs	r3, r3, #8
 450 0096 9B00     		lsls	r3, r3, #2
 451 0098 1846     		mov	r0, r3
 452 009a 0523     		movs	r3, #5
 453 009c 8340     		lsls	r3, r3, r0
 454 009e 1343     		orrs	r3, r3, r2
 455 00a0 0B65     		str	r3, [r1, #80]
 456              	.L21:
  96:../src/LED_Module.c ****     {
 457              		.loc 1 96 0 discriminator 2
 458 00a2 FB68     		ldr	r3, [r7, #12]
 459 00a4 0133     		adds	r3, r3, #1
 460 00a6 FB60     		str	r3, [r7, #12]
 461              	.L19:
  96:../src/LED_Module.c ****     {
 462              		.loc 1 96 0 is_stmt 0 discriminator 1
 463 00a8 FB68     		ldr	r3, [r7, #12]
 464 00aa 0B2B     		cmp	r3, #11
 465 00ac CAD9     		bls	.L25
 118:../src/LED_Module.c ****         }
 119:../src/LED_Module.c ****     }
 120:../src/LED_Module.c ****     i = GPIO->P[2].MODEL;
 466              		.loc 1 120 0 is_stmt 1
 467 00ae 224B     		ldr	r3, .L29+12
 468 00b0 DB6C     		ldr	r3, [r3, #76]
 469 00b2 FB60     		str	r3, [r7, #12]
 121:../src/LED_Module.c ****     i = GPIO->P[2].MODEH;
 470              		.loc 1 121 0
 471 00b4 204B     		ldr	r3, .L29+12
 472 00b6 1B6D     		ldr	r3, [r3, #80]
 473 00b8 FB60     		str	r3, [r7, #12]
 474              	.L28:
 122:../src/LED_Module.c ****     while (1) {
 123:../src/LED_Module.c ****         // 15ms PWM period
 124:../src/LED_Module.c ****         vTaskDelay(5);
 475              		.loc 1 124 0
 476 00ba 0520     		movs	r0, #5
 477 00bc FFF7FEFF 		bl	vTaskDelay
 125:../src/LED_Module.c ****         ChangeLED(LEDLayerRed, 1, 0, 0);
 478              		.loc 1 125 0
 479 00c0 1E4B     		ldr	r3, .L29+16
 480 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 481 00c4 1846     		mov	r0, r3
 482 00c6 0121     		movs	r1, #1
 483 00c8 0022     		movs	r2, #0
 484 00ca 0023     		movs	r3, #0
 485 00cc FFF7FEFF 		bl	ChangeLED
 126:../src/LED_Module.c ****         vTaskDelay(5);
 486              		.loc 1 126 0
 487 00d0 0520     		movs	r0, #5
 488 00d2 FFF7FEFF 		bl	vTaskDelay
 127:../src/LED_Module.c ****         ChangeLED(LEDLayerGreen, 0, 1, 0);
 489              		.loc 1 127 0
 490 00d6 1A4B     		ldr	r3, .L29+20
 491 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 492 00da 1846     		mov	r0, r3
 493 00dc 0021     		movs	r1, #0
 494 00de 0122     		movs	r2, #1
 495 00e0 0023     		movs	r3, #0
 496 00e2 FFF7FEFF 		bl	ChangeLED
 128:../src/LED_Module.c ****         vTaskDelay(5);
 497              		.loc 1 128 0
 498 00e6 0520     		movs	r0, #5
 499 00e8 FFF7FEFF 		bl	vTaskDelay
 129:../src/LED_Module.c ****         ChangeLED(LEDLayerBlue, 0, 0, 1);
 500              		.loc 1 129 0
 501 00ec 154B     		ldr	r3, .L29+24
 502 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 503 00f0 1846     		mov	r0, r3
 504 00f2 0021     		movs	r1, #0
 505 00f4 0022     		movs	r2, #0
 506 00f6 0123     		movs	r3, #1
 507 00f8 FFF7FEFF 		bl	ChangeLED
 130:../src/LED_Module.c ****         if (ulTaskNotifyTake(pdTRUE, 0))
 508              		.loc 1 130 0
 509 00fc 0120     		movs	r0, #1
 510 00fe 0021     		movs	r1, #0
 511 0100 FFF7FEFF 		bl	ulTaskNotifyTake
 512 0104 0346     		mov	r3, r0
 513 0106 002B     		cmp	r3, #0
 514 0108 0FD0     		beq	.L26
 131:../src/LED_Module.c ****         {
 132:../src/LED_Module.c ****             if (LEDLayerRed < 0x80)
 515              		.loc 1 132 0
 516 010a 0C4B     		ldr	r3, .L29+16
 517 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518 010e DBB2     		uxtb	r3, r3
 519 0110 5BB2     		sxtb	r3, r3
 520 0112 002B     		cmp	r3, #0
 521 0114 06DB     		blt	.L27
 133:../src/LED_Module.c ****             {
 134:../src/LED_Module.c ****                 LEDLayerRed <<= 1;
 522              		.loc 1 134 0
 523 0116 094B     		ldr	r3, .L29+16
 524 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 525 011a 5B00     		lsls	r3, r3, #1
 526 011c DAB2     		uxtb	r2, r3
 527 011e 074B     		ldr	r3, .L29+16
 528 0120 1A70     		strb	r2, [r3]
 529 0122 02E0     		b	.L26
 530              	.L27:
 135:../src/LED_Module.c ****             }
 136:../src/LED_Module.c ****             else
 137:../src/LED_Module.c ****             {
 138:../src/LED_Module.c ****                 LEDLayerRed = 1;
 531              		.loc 1 138 0
 532 0124 054B     		ldr	r3, .L29+16
 533 0126 0122     		movs	r2, #1
 534 0128 1A70     		strb	r2, [r3]
 535              	.L26:
 139:../src/LED_Module.c ****             }
 140:../src/LED_Module.c ****         }
 141:../src/LED_Module.c ****     }
 536              		.loc 1 141 0
 537 012a C6E7     		b	.L28
 538              	.L30:
 539              		.align	2
 540              	.L29:
 541 012c 00000000 		.word	LEDRedMut
 542 0130 00000000 		.word	LEDGreenMut
 543 0134 00000000 		.word	LEDBlueMut
 544 0138 00600040 		.word	1073766400
 545 013c 00000000 		.word	LEDLayerRed
 546 0140 00000000 		.word	LEDLayerGreen
 547 0144 00000000 		.word	LEDLayerBlue
 548              		.cfi_endproc
 549              	.LFE63:
 551              		.section	.text.ChangeLED,"ax",%progbits
 552              		.align	2
 553              		.thumb
 554              		.thumb_func
 556              	ChangeLED:
 557              	.LFB64:
 142:../src/LED_Module.c **** }
 143:../src/LED_Module.c **** /****************** ChangeLED()
 144:../src/LED_Module.c ****  * Description:     Bit blasts to change LEDs and colors.
 145:../src/LED_Module.c ****  * Params           ledsel: Which LEDs are supposed to be on.
 146:../src/LED_Module.c ****  *                  redcntrl: Controls red subpixel
 147:../src/LED_Module.c ****  *                  greencntrl: controls green subpixel
 148:../src/LED_Module.c ****  *                  bluecntrl: controls blue subpixel
 149:../src/LED_Module.c ****  * Return           none
 150:../src/LED_Module.c ****  * Last Edited:     11/14/14 RTC
 151:../src/LED_Module.c ****  */
 152:../src/LED_Module.c **** static void ChangeLED(uint8_t ledsel, uint8_t redcntrl, uint8_t greencntrl, uint8_t bluecntrl)
 153:../src/LED_Module.c **** {
 558              		.loc 1 153 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 8
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 563 0000 90B4     		push	{r4, r7}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 4, -8
 566              		.cfi_offset 7, -4
 567 0002 82B0     		sub	sp, sp, #8
 568              		.cfi_def_cfa_offset 16
 569 0004 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 571 0006 0446     		mov	r4, r0
 572 0008 0846     		mov	r0, r1
 573 000a 1146     		mov	r1, r2
 574 000c 1A46     		mov	r2, r3
 575 000e 2346     		mov	r3, r4
 576 0010 FB71     		strb	r3, [r7, #7]
 577 0012 0346     		mov	r3, r0
 578 0014 BB71     		strb	r3, [r7, #6]
 579 0016 0B46     		mov	r3, r1
 580 0018 7B71     		strb	r3, [r7, #5]
 581 001a 1346     		mov	r3, r2
 582 001c 3B71     		strb	r3, [r7, #4]
 154:../src/LED_Module.c ****     //Shuts off red, green, and blue
 155:../src/LED_Module.c ****     GPIO->P[2].DOUTSET = 7;
 583              		.loc 1 155 0
 584 001e 0F4B     		ldr	r3, .L32
 585 0020 0722     		movs	r2, #7
 586 0022 9A65     		str	r2, [r3, #88]
 156:../src/LED_Module.c ****     GPIO->P[2].DOUTCLR = 0xff<<4;
 587              		.loc 1 156 0
 588 0024 0D4B     		ldr	r3, .L32
 589 0026 4FF47F62 		mov	r2, #4080
 590 002a DA65     		str	r2, [r3, #92]
 157:../src/LED_Module.c ****     //Set new LEDs
 158:../src/LED_Module.c ****     GPIO->P[2].DOUTSET = (ledsel & 0xfe)<<3 | (ledsel & 1)<<11;
 591              		.loc 1 158 0
 592 002c 0B49     		ldr	r1, .L32
 593 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 594 0030 03F0FE03 		and	r3, r3, #254
 595 0034 DA00     		lsls	r2, r3, #3
 596 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 597 0038 03F00103 		and	r3, r3, #1
 598 003c DB02     		lsls	r3, r3, #11
 599 003e 1343     		orrs	r3, r3, r2
 600 0040 8B65     		str	r3, [r1, #88]
 159:../src/LED_Module.c ****     GPIO->P[2].DOUTCLR = ((redcntrl<<2) + (greencntrl<<1) + bluecntrl);
 601              		.loc 1 159 0
 602 0042 0649     		ldr	r1, .L32
 603 0044 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 604 0046 9A00     		lsls	r2, r3, #2
 605 0048 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 606 004a 5B00     		lsls	r3, r3, #1
 607 004c 1A44     		add	r2, r2, r3
 608 004e 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 609 0050 1344     		add	r3, r3, r2
 610 0052 CB65     		str	r3, [r1, #92]
 160:../src/LED_Module.c **** }
 611              		.loc 1 160 0
 612 0054 0837     		adds	r7, r7, #8
 613              		.cfi_def_cfa_offset 8
 614 0056 BD46     		mov	sp, r7
 615              		.cfi_def_cfa_register 13
 616              		@ sp needed
 617 0058 90BC     		pop	{r4, r7}
 618              		.cfi_restore 7
 619              		.cfi_restore 4
 620              		.cfi_def_cfa_offset 0
 621 005a 7047     		bx	lr
 622              	.L33:
 623              		.align	2
 624              	.L32:
 625 005c 00600040 		.word	1073766400
 626              		.cfi_endproc
 627              	.LFE64:
 629              		.text
 630              	.Letext0:
 631              		.file 2 "c:\\program files (x86)\\emprog\\thunderbench-arm-v3.85\\arm\\arm-none-eabi\\include\\mac
 632              		.file 3 "c:\\program files (x86)\\emprog\\thunderbench-arm-v3.85\\arm\\arm-none-eabi\\include\\std
 633              		.file 4 "U:/Thunderspace/EFM32LG330F128/RTOSincludes/portmacro.h"
 634              		.file 5 "U:\\Thunderspace\\EFM32LG330F128\\Libraries\\Device\\EnergyMicro\\EFM32\\Include/efm32lg_
 635              		.file 6 "U:\\Thunderspace\\EFM32LG330F128\\Libraries\\Device\\EnergyMicro\\EFM32\\Include/efm32lg_
 636              		.file 7 "U:/Thunderspace/EFM32LG330F128/RTOSincludes/queue.h"
 637              		.file 8 "U:/Thunderspace/EFM32LG330F128/RTOSincludes/semphr.h"
 638              		.file 9 "../src/../Libraries/../Libraries/datatypes.h"
 639              		.file 10 "U:\\Thunderspace\\EFM32LG330F128\\Libraries\\CMSIS\\Include/core_cm3.h"
 640              		.file 11 "../src/../Libraries/includes.h"
DEFINED SYMBOLS
                            *ABS*:00000000 LED_Module.c
                            *COM*:00000004 PuffSem
                            *COM*:00000004 LEDSem
                            *COM*:00000004 LEDRedMut
                            *COM*:00000004 LEDGreenMut
                            *COM*:00000004 LEDBlueMut
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:26     .data.LEDLayerRed:00000000 LEDLayerRed
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:31     .data.LEDLayerGreen:00000000 LEDLayerGreen
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:36     .data.LEDLayerBlue:00000000 LEDLayerBlue
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:39     .text.LEDChangePixels:00000000 $t
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:44     .text.LEDChangePixels:00000000 LEDChangePixels
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:213    .text.LEDChangePixels:00000114 $d
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:223    .text.LEDUpdateLayer:00000000 $t
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:228    .text.LEDUpdateLayer:00000000 LEDUpdateLayer
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:337    .text.LEDUpdateLayer:000000a4 $d
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:347    .text.LEDTask:00000000 $t
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:352    .text.LEDTask:00000000 LEDTask
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:556    .text.ChangeLED:00000000 ChangeLED
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:541    .text.LEDTask:0000012c $d
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:552    .text.ChangeLED:00000000 $t
C:\Users\Riley\AppData\Local\Temp\ccXqDztT.s:625    .text.ChangeLED:0000005c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
xQueueGenericReceive
xQueueGenericSend
xQueueCreateMutex
vTaskDelay
ulTaskNotifyTake
